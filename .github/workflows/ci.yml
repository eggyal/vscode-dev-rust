name: CI
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  release:
    types: [released]
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2.4.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25 # renovate: tag=v1.6.0

      - name: Cache Docker layers
        uses: actions/cache@c64c572235d810460d0d6876e9c705ad5002b353 # renovate: tag=v2.1.6
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        if: ${{ github.event_name == 'release' }}
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9 # renovate: v1.10.0
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Fetch base image
        id: base
        uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229 # renovate: v2.7.0
        with:
          context: .
          target: base
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Build (and, if a release, push to Docker Hub)
        if: ${{ github.event_name != 'cron' }}
        id: build
        uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229 # renovate: v2.7.0
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.event_name == 'release' }}
          tags: ${{ github.repository }}:${{ github.event.release.name || 'ci' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache{-new,}

      - name: Determine Updates
        if: ${{ github.event_name == 'cron' }}
        run: >
          docker run
            -e MOLD_GITHUB_REPO="rui314/mold"
            -e MOLD_TARBALL_URL="mold.url"
            -e MOLD_BUILD_DEPS="mold.build-packages"
            -u vscode
            -v ${{ github.workspace }}:/workspace
            -w /workspace
            ${{ steps.base.digest }}
            /workspace/update.sh

      - name: Generate GitHub token
        if: ${{ github.event_name == 'cron' }}
        uses: tibdex/github-app-token@cdb5bfda87db263e4be5c6f570c4c39611ee952a # renovate: v1.4.0
        id: generate-token
        with:
          app_id: ${{ secrets.PR_APP_ID }}
          private_key: ${{ secrets.PR_PRIVATE_KEY }}

      - name: Create Pull Request
        if: ${{ github.event_name == 'cron' }}
        uses: peter-evans/create-pull-request@7380612b49221684fefa025244f2ef4008ae50ad # renovate: tag=v3.10.1
        with:
          token: ${{ steps.generate-token.outputs.token }}
          branch: update-mold
          delete-branch: true
          title: 'Update mold'
