name: CI
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  schedule:
    - cron: '0 0 * * *'

jobs:
  update:
    runs-on: ubuntu-20.04
    steps:
      - name: Determine effective user and group
        id: effective-user
        run: |
          echo "::set-output name=uid::$(id -u)"
          echo "::set-output name=gid::$(id -g)"

      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2.4.0

      - name: Login to GitHub Container Registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9 # renovate: tag=v1.10.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build base
        uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229 # renovate: tag=v2.7.0
        with:
          context: .devcontainer
          build-args: |
            USER_UID=${{ steps.effective-user.outputs.uid }}
            USER_GID=${{ steps.effective-user.outputs.gid }}
          target: base
          tags: ghcr.io/${{ github.repository }}/ci-update
          cache-from: ghcr.io/${{ github.repository }}/ci-update
          cache-to: type=inline
          push: ${{ github.event_name == 'push' }}

      - name: Determine Updates
        run: >
          docker run
          -v ${{ github.workspace }}:/workspace
          ghcr.io/${{ github.repository }}/ci-update
          /workspace/.devcontainer/update.sh

      - name: Generate GitHub token
        id: generate-token
        if: ${{ github.event_name == 'schedule' }}
        uses: tibdex/github-app-token@1901dc7d52169e70c27a8da37aef0d423e2867a2 # renovate: tag=v1.5.0
        with:
          app_id: ${{ secrets.PR_APP_ID }}
          private_key: ${{ secrets.PR_PRIVATE_KEY }}

      - name: Create Pull Request
        if: ${{ github.event_name == 'schedule' }}
        uses: peter-evans/create-pull-request@18f7dc018cc2cd597073088f7c7591b9d1c02672 # v3.14.0
        with:
          token: ${{ steps.generate-token.outputs.token }}
          branch: update-mold
          delete-branch: true
          title: 'Update mold'

  build:
    if: ${{ github.event_name != 'schedule' }}
    runs-on: ubuntu-20.04
    steps:
      - name: Login to DockerHub
        if: ${{ github.event_name == 'push' }}
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9 # renovate: tag=v1.10.0
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2.4.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25 # renovate: tag=v1.6.0

      - name: Build (and, if a release, push to Docker Hub)
        uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229 # renovate: tag=v2.7.0
        with:
          context: .devcontainer
          tags: ${{ github.repository }}:1-bullseye
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: ${{ github.event_name == 'push' }}
